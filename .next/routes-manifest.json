{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/auth/confirm",
      "regex": "^/auth/confirm(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/confirm(?:/)?$"
    },
    {
      "page": "/auth/error",
      "regex": "^/auth/error(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/error(?:/)?$"
    },
    {
      "page": "/auth/forgot-password",
      "regex": "^/auth/forgot\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/forgot\\-password(?:/)?$"
    },
    {
      "page": "/auth/login",
      "regex": "^/auth/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/login(?:/)?$"
    },
    {
      "page": "/auth/sign-up",
      "regex": "^/auth/sign\\-up(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/sign\\-up(?:/)?$"
    },
    {
      "page": "/auth/sign-up-success",
      "regex": "^/auth/sign\\-up\\-success(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/sign\\-up\\-success(?:/)?$"
    },
    {
      "page": "/auth/update-password",
      "regex": "^/auth/update\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/update\\-password(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/instruments",
      "regex": "^/instruments(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/instruments(?:/)?$"
    },
    {
      "page": "/opengraph-image.png",
      "regex": "^/opengraph\\-image\\.png(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/opengraph\\-image\\.png(?:/)?$"
    },
    {
      "page": "/protected",
      "regex": "^/protected(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/protected(?:/)?$"
    },
    {
      "page": "/todos",
      "regex": "^/todos(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/todos(?:/)?$"
    },
    {
      "page": "/twitter-image.png",
      "regex": "^/twitter\\-image\\.png(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/twitter\\-image\\.png(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}